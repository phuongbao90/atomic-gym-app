// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL")
  url      = "postgresql://bao:3246@localhost:5432/gymapp"
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  name        String
  gender      String?
  age         Int?
  password    String
  createdAt   DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime      @updatedAt @db.Timestamptz(6)
  // deletedAt DateTime?
  Exercise    Exercise[]
  ExerciseLog ExerciseLog[]
  WorkoutPlan WorkoutPlan[]
  avatar      String?
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean? @default(false)

  authorId Int?
}

enum ExerciseCategory {
  WEIGHT
  FREE_WEIGHT
  CARDIO
}

model MuscleGroup {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  exercises Exercise[]
}

model Exercise {
  id           Int              @id @default(autoincrement())
  name         String
  description  String?
  category     ExerciseCategory
  muscleGroups MuscleGroup[]
  createdBy    User             @relation(fields: [createdById], references: [id])
  createdById  Int
  images       String[]
  createdAt    DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime         @updatedAt @db.Timestamptz(6)
  ExerciseLog  ExerciseLog[]
  Workout      Workout?         @relation(fields: [workoutId], references: [id])
  workoutId    Int?
}

model ExerciseLog {
  id          Int      @id @default(autoincrement())
  exercise    Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId  Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  date        DateTime
  repetitions Int
  weight      Float?
  notes       String?
}

enum WorkoutPlanObjective {
  STRENGTH
  ENDURANCE
  BALANCE
  FLEXIBILITY
  LOOSE_WEIGHT
}

enum WorkoutPlanLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

model WorkoutPlan {
  id          Int                   @id @default(autoincrement())
  name        String
  cover_image String?
  description String?
  objective   WorkoutPlanObjective?
  level       WorkoutPlanLevel?
  // days        Int?
  workouts    Workout[]
  createdBy   User                  @relation(fields: [createdById], references: [id])
  createdById Int
  createdAt   DateTime              @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime              @updatedAt @db.Timestamptz(6)
  isPublic    Boolean?              @default(false)
  isPremium   Boolean?              @default(false)
}

model Workout {
  id            Int         @id @default(autoincrement())
  name          String
  exercises     Exercise[]
  order         Int?
  createdAt     DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(6)
  WorkoutPlan   WorkoutPlan @relation(fields: [workoutPlanId], references: [id])
  workoutPlanId Int
}
