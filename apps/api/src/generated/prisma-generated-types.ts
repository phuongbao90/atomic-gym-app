// This file was auto-generated by prisma-generator-typescript-interfaces

export type Language = "vi" | "en";

export type ExerciseCategory = "WEIGHT" | "FREE_WEIGHT" | "CARDIO";

export type WorkoutPlanLevel = "BEGINNER" | "INTERMEDIATE" | "ADVANCED";

export type WorkoutPlanGoal = "STRENGTH" | "ENDURANCE" | "BALANCE" | "FLEXIBILITY" | "LOOSE_WEIGHT";

export type WorkoutSessionStatus = "PLANNED" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";

export type BodyMeasurementCategory = "COMPOSITION" | "MUSCLE" | "FAT" | "WATER" | "BONE" | "VISCERAL" | "METABOLIC" | "OTHER";

export interface User {
  id: string;
  name: string;
  email: string;
  emailVerified: boolean;
  image: string | null;
  createdAt: string;
  updatedAt: string;
  sessions?: Session[];
  accounts?: Account[];
  gender: string | null;
  age: number | null;
  avatar: string | null;
  exercises?: Exercise[];
  workoutPlans?: WorkoutPlan[];
  workoutSessions?: WorkoutSession[];
  bodyMeasurements?: BodyMeasurement[];
  performedSets?: PerformedSet[];
}

export interface MuscleGroup {
  id: number;
  parentId: number | null;
  image: string;
  isActive: boolean;
  translations?: MuscleGroupTranslation[];
  exercises?: Exercise[];
  exerciseMuscleGroup?: ExerciseMuscleGroup[];
}

export interface MuscleGroupTranslation {
  muscleGroupId: number;
  language: Language;
  name: string;
  normalizedName: string | null;
  slug: string;
  muscleGroup?: MuscleGroup;
}

export interface Exercise {
  id: string;
  notes: string | null;
  category: ExerciseCategory;
  createdBy?: User;
  createdById: string;
  images: string[];
  createdAt: string;
  updatedAt: string;
  isPublic: boolean;
  isActive: boolean;
  sessionExercises?: SessionExercise[];
  muscleGroups?: ExerciseMuscleGroup[];
  translations?: ExerciseTranslation[];
  templateExercises?: TemplateExercise[];
  MuscleGroup?: MuscleGroup | null;
  muscleGroupId: number | null;
}

export interface ExerciseMuscleGroup {
  exerciseId: string;
  muscleGroupId: number;
  isPrimary: boolean;
  exercise?: Exercise;
  muscleGroup?: MuscleGroup;
}

export interface ExerciseTranslation {
  exerciseId: string;
  language: Language;
  name: string;
  normalizedName: string | null;
  description: string | null;
  slug: string;
  exercise?: Exercise;
}

export interface WorkoutPlan {
  id: string;
  cover_image: string | null;
  level: WorkoutPlanLevel | null;
  isPublic: boolean | null;
  isPremium: boolean | null;
  isFeatured: boolean | null;
  isSingle: boolean | null;
  goal: WorkoutPlanGoal | null;
  createdBy?: User;
  createdById: string;
  createdAt: string;
  updatedAt: string;
  isActive: boolean;
  translations?: WorkoutPlanTranslation[];
  workoutTemplates?: WorkoutTemplate[];
  workoutSessions?: WorkoutSession[];
}

export interface WorkoutTemplate {
  id: string;
  order: number;
  workoutPlan?: WorkoutPlan;
  workoutPlanId: string;
  createdAt: string;
  updatedAt: string;
  isActive: boolean;
  templateExercises?: TemplateExercise[];
  workoutSessions?: WorkoutSession[];
  translations?: WorkoutTemplateTranslation[];
}

export interface WorkoutTemplateTranslation {
  workoutTemplateId: string;
  language: Language;
  name: string;
  normalizedName: string | null;
  slug: string;
  workoutTemplate?: WorkoutTemplate;
}

export interface TemplateExercise {
  id: string;
  workoutTemplate?: WorkoutTemplate;
  workoutTemplateId: string;
  exercise?: Exercise;
  exerciseId: string;
  order: number;
  templateSets?: TemplateSets[];
}

export interface TemplateSets {
  id: string;
  templateExercise?: TemplateExercise;
  templateExerciseId: string;
  restTime: number | null;
  isWarmup: boolean;
  isDropSet: boolean;
  isUntilFailure: boolean;
  setNumber: number;
}

export interface WorkoutPlanTranslation {
  workoutPlanId: string;
  language: Language;
  name: string;
  normalizedName: string | null;
  description: string | null;
  slug: string;
  workoutPlan?: WorkoutPlan;
}

export interface WorkoutSession {
  id: string;
  user?: User;
  userId: string;
  status: WorkoutSessionStatus;
  notes: string | null;
  startedAt: string | null;
  completedAt: string | null;
  duration: number | null;
  workoutPlan?: WorkoutPlan;
  workoutPlanId: string;
  workoutTemplate?: WorkoutTemplate;
  workoutTemplateId: string;
  wasModified: boolean;
  modificationsSaved: boolean;
  createdAt: string;
  updatedAt: string;
  sessionExercises?: SessionExercise[];
}

export interface SessionExercise {
  id: string;
  session?: WorkoutSession;
  sessionId: string;
  exercise?: Exercise;
  exerciseId: string;
  order: number;
  notes: string | null;
  exerciseNameSnapshot: string;
  performedSets?: PerformedSet[];
}

export interface PerformedSet {
  id: string;
  sessionExercise?: SessionExercise;
  sessionExerciseId: string;
  setNumber: number;
  reps: number | null;
  weight: number | null;
  duration: number | null;
  distance: number | null;
  restTime: number | null;
  isCompleted: boolean;
  isWarmup: boolean;
  isDropSet: boolean;
  isFailure: boolean;
  performedAt: string;
  user?: User;
  userId: string;
}

export interface Session {
  id: string;
  expiresAt: string;
  token: string;
  createdAt: string;
  updatedAt: string;
  ipAddress: string | null;
  userAgent: string | null;
  userId: string;
  user?: User;
}

export interface Account {
  id: string;
  accountId: string;
  providerId: string;
  userId: string;
  user?: User;
  accessToken: string | null;
  refreshToken: string | null;
  idToken: string | null;
  accessTokenExpiresAt: string | null;
  refreshTokenExpiresAt: string | null;
  scope: string | null;
  password: string | null;
  createdAt: string;
  updatedAt: string;
}

export interface Verification {
  id: string;
  identifier: string;
  value: string;
  expiresAt: string;
  createdAt: string | null;
  updatedAt: string | null;
}

export interface BodyMeasurementType {
  id: number;
  category: BodyMeasurementCategory;
  name: string;
  unit: string;
  description: string | null;
  isActive: boolean;
  createdAt: string;
  updatedAt: string;
  translations?: BodyMeasurementTypeTranslation[];
  measurements?: BodyMeasurement[];
}

export interface BodyMeasurementTypeTranslation {
  bodyMeasurementTypeId: number;
  language: Language;
  name: string;
  description: string | null;
  bodyMeasurementType?: BodyMeasurementType;
}

export interface BodyMeasurement {
  id: string;
  user?: User;
  userId: string;
  measurementType?: BodyMeasurementType;
  measurementTypeId: number;
  value: number;
  notes: string | null;
  date: string;
  createdAt: string;
  updatedAt: string;
}
