diff --git a/node_modules/react-native-draggable-flatlist/src/components/CellRendererComponent.tsx b/node_modules/react-native-draggable-flatlist/src/components/CellRendererComponent.tsx
index d7b833b..241ff41 100644
--- a/node_modules/react-native-draggable-flatlist/src/components/CellRendererComponent.tsx
+++ b/node_modules/react-native-draggable-flatlist/src/components/CellRendererComponent.tsx
@@ -4,7 +4,6 @@ import {
   LayoutChangeEvent,
   MeasureLayoutOnSuccessCallback,
   StyleProp,
-  StyleSheet,
   ViewStyle,
 } from "react-native";
 import Animated, {
@@ -64,7 +63,7 @@ function CellRendererComponent<T>(props: Props<T>) {
     if (translate.value && !isWeb) {
       heldTanslate.value = translate.value;
     }
-    const t = activeKey ? translate.value : heldTanslate.value;
+    const t = isWeb ? translate.value : heldTanslate.value;
     return {
       transform: [horizontalAnim.value ? { translateX: t } : { translateY: t }],
     };
@@ -100,12 +99,12 @@ function CellRendererComponent<T>(props: Props<T>) {
   });
 
   const onCellLayout = useStableCallback((e?: LayoutChangeEvent) => {
-    heldTanslate.value = 0;
     updateCellMeasurements();
     if (onLayout && e) onLayout(e);
   });
 
   useEffect(() => {
+    heldTanslate.value = 0;
     if (isWeb) {
       // onLayout isn't called on web when the cell index changes, so we manually re-measure
       requestAnimationFrame(() => {
@@ -166,7 +165,7 @@ function CellRendererComponent<T>(props: Props<T>) {
       style={[
         props.style,
         baseStyle,
-        activeKey ? animStyle : styles.zeroTranslate,
+        animStyle,
       ]}
       pointerEvents={activeKey ? "none" : "auto"}
     >
@@ -177,12 +176,6 @@ function CellRendererComponent<T>(props: Props<T>) {
 
 export default typedMemo(CellRendererComponent);
 
-const styles = StyleSheet.create({
-  zeroTranslate: {
-    transform: [{ translateX: 0 }, { translateY: 0 }],
-  },
-});
-
 declare global {
   namespace NodeJS {
     interface Global {
