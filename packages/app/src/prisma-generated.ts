// This file was auto-generated by prisma-generator-typescript-interfaces

export type Language = "vi" | "en";

export type ExerciseCategory = "WEIGHT" | "FREE_WEIGHT" | "CARDIO" | "TIME" | "REPS";

export type WorkoutPlanLevel = "BEGINNER" | "INTERMEDIATE" | "ADVANCED";

export type WorkoutPlanCategory = "STRENGTH" | "ENDURANCE" | "BALANCE" | "FLEXIBILITY" | "LOOSE_WEIGHT";

export interface User {
  id: string;
  name: string;
  email: string;
  emailVerified: boolean;
  image: string | null;
  createdAt: string;
  updatedAt: string;
  sessions?: Session[];
  accounts?: Account[];
  gender: string | null;
  age: number | null;
  avatar: string | null;
  Exercise?: Exercise[];
  WorkoutPlan?: WorkoutPlan[];
  WorkoutSessionLog?: WorkoutSessionLog[];
}

export interface MuscleGroup {
  id: number;
  parentId: number | null;
  image: string;
  exercises?: Exercise[];
  translations?: MuscleGroupTranslation[];
}

export interface MuscleGroupTranslation {
  muscleGroupId: number;
  language: Language;
  name: string;
  normalizedName: string | null;
  slug: string;
  muscleGroup?: MuscleGroup;
}

export interface Exercise {
  id: number;
  notes: string | null;
  category: ExerciseCategory;
  primaryMuscle?: MuscleGroup[];
  createdBy?: User;
  createdById: string;
  images: string[];
  createdAt: string;
  updatedAt: string;
  translations?: ExerciseTranslation[];
  workoutExercises?: WorkoutExercise[];
  ExerciseSetLog?: ExerciseSetLog[];
}

export interface ExerciseTranslation {
  exerciseId: number;
  language: Language;
  name: string;
  normalizedName: string | null;
  description: string | null;
  slug: string;
  exercise?: Exercise;
}

export interface WorkoutPlan {
  id: string;
  cover_image: string | null;
  level: WorkoutPlanLevel | null;
  isPublic: boolean | null;
  isPremium: boolean | null;
  isFeatured: boolean | null;
  isSingle: boolean | null;
  category: WorkoutPlanCategory | null;
  workouts?: Workout[];
  createdBy?: User;
  createdById: string;
  createdAt: string;
  updatedAt: string;
  translations?: WorkoutPlanTranslation[];
  WorkoutSessionLog?: WorkoutSessionLog[];
}

export interface WorkoutPlanTranslation {
  workoutPlanId: string;
  language: Language;
  name: string;
  normalizedName: string | null;
  description: string | null;
  slug: string;
  workoutPlan?: WorkoutPlan;
}

export interface Workout {
  id: string;
  order: number | null;
  createdAt: string;
  updatedAt: string;
  WorkoutPlan?: WorkoutPlan;
  workoutPlanId: string;
  translations?: WorkoutTranslation[];
  workoutExercises?: WorkoutExercise[];
  WorkoutSessionLog?: WorkoutSessionLog[];
}

export interface WorkoutTranslation {
  workoutId: string;
  language: Language;
  name: string;
  normalizedName: string | null;
  slug: string;
  workout?: Workout;
}

export interface ExerciseSet {
  id: string;
  restTime: number;
  isWarmup: boolean;
  isDropSet: boolean;
  isUntilFailure: boolean;
  WorkoutExercise?: WorkoutExercise;
  workoutExerciseId: string;
}

export interface WorkoutExercise {
  id: string;
  workout?: Workout;
  workoutId: string;
  exercise?: Exercise;
  exerciseId: number;
  order: number;
  sets?: ExerciseSet[];
  notes: string | null;
}

export interface WorkoutSessionLog {
  id: number;
  user?: User;
  userId: string;
  workoutPlan?: WorkoutPlan;
  workoutPlanId: string;
  workout?: Workout;
  workoutId: string;
  createdAt: string | null;
  notes: string | null;
  setLogs?: ExerciseSetLog[];
  duration: number;
}

export interface ExerciseSetLog {
  id: number;
  workoutSession?: WorkoutSessionLog;
  workoutSessionId: number;
  exercise?: Exercise;
  exerciseId: number;
  weight: number | null;
  repetitions: number | null;
  distance: number | null;
  duration: number | null;
  isIncomplete: boolean | null;
  createdAt: string | null;
}

export interface Session {
  id: string;
  expiresAt: string;
  token: string;
  createdAt: string;
  updatedAt: string;
  ipAddress: string | null;
  userAgent: string | null;
  userId: string;
  user?: User;
}

export interface Account {
  id: string;
  accountId: string;
  providerId: string;
  userId: string;
  user?: User;
  accessToken: string | null;
  refreshToken: string | null;
  idToken: string | null;
  accessTokenExpiresAt: string | null;
  refreshTokenExpiresAt: string | null;
  scope: string | null;
  password: string | null;
  createdAt: string;
  updatedAt: string;
}

export interface Verification {
  id: string;
  identifier: string;
  value: string;
  expiresAt: string;
  createdAt: string | null;
  updatedAt: string | null;
}
